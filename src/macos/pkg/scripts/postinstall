#!/bin/bash

appName=SyncClippings
appVer=2.0.0
installPath=/Library/${appName}/${appVer}
exeFilename=syncClippings
confFilename=syncClippings.ini
nativeManifestFilename=syncClippings.json

checkConfFile() {
    local configFileDir=~/Library/Preferences
    local configFile="${configFileDir}/${confFilename}"

    if [[ -f $configFile ]]; then
	echo -e "Config file exists at ${configFile}"
    fi
}

writeNativeManifest() {
    local nativeManifestDir=/Library/Application\ Support/Mozilla/NativeMessagingHosts

    local nativeManifestFile="${nativeManifestDir}/${nativeManifestFilename}"
    local exePath="$installPath/$exeFilename"
    echo "Writing native messaging manifest $nativeManifestFile"

    # Check if the native manifest directory exists; if not, then create it.
    if [[ ! -d $nativeManifestDir ]]; then
	mkdir -pv "$nativeManifestDir"
    fi
    
    cat << EOF > "$nativeManifestFile"
{
    "name": "syncClippings",
    "description": "Sync Clippings",
    "path": "$exePath",
    "type": "stdio",
    "allowed_extensions": [
      "{91aa5abe-9de4-4347-b7b5-322c38dd9271}",
      "clippings-tb@aecreations.github.io"
    ]
}
EOF
}

deleteOldVersions() {
    local oldInstPath=/Library/${appName}/1.2.0
    if [[ -d $oldInstPath ]]; then
	echo "Removing previous version 1.2"
	sudo rm -rf "$oldInstPath"
    fi
}

main() {
    writeNativeManifest
    checkConfFile
    deleteOldVersions

    echo "Post installation successfully completed"
}

main
